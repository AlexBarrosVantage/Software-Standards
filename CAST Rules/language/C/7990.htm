<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid using realpath() function</title>
<link rel="StyleSheet" href="../../style.css" type="text/css">
</head>
<body>
<h4>Avoid using realpath() function</h4>
<hr>
<h5>Technology</h5>
<p>C Language, C++</p>
<h5>Unified Status</h5>
<p>Unified</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>6</p>
<h5>Rationale</h5>
<p>The function &#39;realpath()&#39; is considered as very risky and must not be used since it is not possible to specify correctly the size for the output buffer. Using PATH_MAX constant or &#39;pathconf()&#39; function may also lead to troubles because PATH_MAX can be undefined and, according to
POSIX, &#39;pathconf()&#39; can be too large to be used to allocate memory correctly and can return -1 if PATH_MAX is not bounded.</p>
<h5>Description</h5>
<p>This rule searches for C/C++ functions, methods, constructors, and destructors that call the &#39;realpath()&#39; function.</p>
<h5>Remediation</h5>
<p>Try to avoid using the &#39;realpath()&#39; function. If it is not possible, then protect the code against buffer overflow and check if the possible max path size is compliant with the MAX_PATH constant.</p>
<h5>Reference</h5>
<p>Build Security In (https://buildsecurityin.us-cert.gov/bsi/articles/knowledge/coding)</p>
<h5>Sample</h5>
<pre>
int main(int argc, char *argv[]) 
{
  char *relat_path = argv[1];
  char exp_path [strlen(relat_path)];
  char *exp_path_ptr;
  exp_path_ptr = realpath(relat_path, exp_path);

  return 1;
}
</pre>
<h5>Remediation sample</h5>
<pre>
int main(int argc, char *argv[]) 
{
  char *relat_path = argv[1];
  char exp_path [PATH_MAX];
  char *exp_path_ptr;
  exp_path_ptr = realpath(relat_path, exp_path);

  return 1;
}
</pre>
<h5>Output</h5>
<p>Associated to each C/C++ function/method/constructor/destructor with violations, the Quality Rule provides: - Number of violation patterns - Bookmarks for violation patterns found in the source code: - &#39;realpath()&#39; function call</p>
<h5>Total</h5>
<p>Number of C/C++ functions, constructors, destructors, and methods</p>
<h5>Metric ID</h5>
<p>7990</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
