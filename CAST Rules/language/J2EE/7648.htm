<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid calling finalize()</title>
<link rel="StyleSheet" href="../../style.css" type="text/css">
</head>
<body>
<h4>Avoid calling finalize()</h4>
<hr>
<h5>Technology</h5>
<p>JEE</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>4</p>
<h5>Rationale</h5>
<p>Object.finalize() method are supposed to be invoked at most one time by the garbage collector on Objects which are no longer referenced. This method can be invoked by another thread in parallel. Explicit invocation of a finalizer ignores the current state of the object and does not change the
state of the object from unfinalized or finalizable to finalized.</p>
<h5>Description</h5>
<p>Report all explicit call to finalize() except call to super.finalize() from a finalize() method.</p>
<h5>Remediation</h5>
<p>If an explicit call to finalize method is required, there is two possible remediation: - if finalize method is used to release non-memory resources like file handles, sockets, database connections etc: you must not use this method to release these resources but create a specific method or
release these resource in a finally block. Finalize() method is used only to release memory resources. - if it is used for memory resources, the Garbage collector will handle the invocation, so just remove the explicit call.</p>
<h5>Reference</h5>
<p>http://www.owasp.org/index.php/Poor_Style:_Explicit_call_to_finalize()</p>
<h5>Sample</h5>
<pre>
public class MyClass  {
     ...
      protected void finalize() throws Throwable {
          // some code here
         ......
          super.finalize();
     }
} 

public class InvokeFinalize {
    private MyClass mine = new MyClass();
    ...
    public meth () {
       ...
        mine.finalize();  // VIOLATION
    }
}
</pre>
<h5>Remediation sample</h5>
<pre>
public class InvokeFinalize {
    private MyClass mine = new MyClass();
    ...
    public meth () {
       ... 
/ FIXED
    }
}
</pre>
<h5>Output</h5>
<p>The metric will list all methods that call a finalize method (filter by method signature void finalise() ) It provides the following information: Method full name</p>
<h5>Total</h5>
<p>number of call to finalize methods</p>
<h5>Metric ID</h5>
<p>7648</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
