<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid using &#39;new[]&#39;, prefer &#39;std::vector&#39; or &#39;std::array&#39;</title>
<link rel="StyleSheet" href="../../style.css" type="text/css">
</head>
<body>
<h4>Avoid using &#39;new[]&#39;, prefer &#39;std::vector&#39; or &#39;std::array&#39;</h4>
<hr>
<h5>Technology</h5>
<p>C Language, C++</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>6</p>
<h5>Rationale</h5>
<p>&#39;std::vector&#39; automatically manages memory, including calling &#39;delete[]&#39; when required, even when exceptions are thrown. Moreover, &#39;std::vector&#39; provides more functionalities, including the ability to resize itself dynamically. For dynamically allocated arrays of char
type, consider using &#39;std::string&#39; instead of &#39;std::vector&lt;char&gt;&#39;, since this type contains specific functions for string manipulations. For more information, refer to Effective STL Item 13 from Scott Meyers.</p>
<h5>Description</h5>
<p>This rule searches for C++ functions that use the &#39;new[]&#39; operator.</p>
<h5>Remediation</h5>
<p>You can use either &#39;std::vector&#39;, if the size of collection is not known at compile time, or &#39;std::array&#39; if it is a compile-time constant (for instance, storing coordinates in a three dimensional world).</p>
<h5>Sample</h5>
<pre>
void f()
{
    MyClass *myCol = new MyClass[100] ;
    delete [] myCol ;
    char *myText = new char[10] ;
    strcpy (myText, &quot;Hello world!&quot;);
    delete[] myText;
}
</pre>
<h5>Remediation sample</h5>
<pre>
void f()
{
    std::vector&lt;MyClass&gt; myCol(100) ;
    std::string myText = &quot;Hello world !&quot;;
}
</pre>
<h5>Output</h5>
<p>Associated to each C++ method, constructor, and destructor with violations, the Quality Rule provides: - number of violation patterns - Bookmarks for violation patterns found in source code: - new[] operator</p>
<h5>Total</h5>
<p>Number of C++ constructors, destructors, and methods, and **functions** of course.</p>
<h5>Metric ID</h5>
<p>8076</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
