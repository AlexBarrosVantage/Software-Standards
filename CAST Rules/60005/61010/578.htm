<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid Classes with multiple inheritance</title>
<link rel="StyleSheet" href="../../style.css" type="text/css">
</head>
<body>
<h4>Avoid Classes with multiple inheritance</h4>
<hr>
<h5>Technology</h5>
<p>C++</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>4</p>
<h5>Rationale</h5>
<p>Multiple inheritance increases the code complexity and therefore the maintenance costs. Furthermore it can lead to the Deadly Diamond of Derivation problem (several inheritance of the same base class).</p>
<h5>Description</h5>
<p>This rule searches for C++ classes that are derived from more than one parent class. Note: Pure virtual classes (that can be used as interfaces) are not considered as violating this rule.</p>
<h5>Remediation</h5>
<p>Review the design of the class hierarchy and try to limit multiple inheritance cases as much as possible.</p>
<h5>Output</h5>
<p>Associated to each C++ class with violations, the Quality Rule provides: - The number of parent classes - Bookmarks for violation patterns found in source code: - Parent class derivation</p>
<h5>Total</h5>
<p>Number of C++ classes</p>
<h5>Metric ID</h5>
<p>578</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
