<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Provide a private default Constructor for utility Classes</title>
<link rel="StyleSheet" href="../../style.css" type="text/css">
</head>
<body>
<h4>Provide a private default Constructor for utility Classes</h4>
<hr>
<h5>Technology</h5>
<p>JEE</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>4</p>
<h5>Rationale</h5>
<p>Utility classes are not meant to be instantiated because all the functionalities that they provide are accessible without instantiating the class. Instantiating these classes means that the developer has misused the class. It also consumes memory unnecessarily. Instead, providing a private
default constructor ensures that the class is not instantiated.</p>
<h5>Description</h5>
<p>Utility classes must have a private default constructor, but not other constructors. Default constructors are constructors without any parameters. Utility classes are static classes: all their fields and methods are static.</p>
<h5>Remediation</h5>
<p>Add a private default constructor to ensure that the class cannot be instantiated.</p>
<h5>Reference</h5>
<p>http://www.javapractices.com/Topic40.cjp</p>
<h5>Sample</h5>
<pre>
public class MyClassUtility
{
      static public bool MyUtilityFunction() {
            // Do Something Usefull 
            return true;
      }

      static int UtilityCount;
}  // VIOLATION
</pre>
<h5>Remediation sample</h5>
<pre>
public class MyClassUtility
{
      static public bool MyUtilityFunction() {
            // Do Something Usefull 
            return true;
      }

      private MyUtilityClass() {  // FIXED
            // Avoid instantiation of the class
      }
      static int UtilityCount;
}
</pre>
<h5>Output</h5>
<p>The Quality Rule will list all classes with all fields and static methods that do not have at least one private default constructor. It will also list all classes with all fields and static methods that, in addition to the private default constructor, have other constructors.</p>
<h5>Total</h5>
<p>Number of utility classes (all their fields and methods are static)</p>
<h5>Metric ID</h5>
<p>7256</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
