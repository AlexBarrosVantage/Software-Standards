<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid Classes with an assignment operator and the default Destructor or assignment operator</title>
<link rel="StyleSheet" href="../../../style.css" type="text/css">
</head>
<body>
<h4>Avoid Classes with an assignment operator and the default Destructor or assignment operator</h4>
<hr>
<h5>Technology</h5>
<p>C++</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>7</p>
<h5>Rationale</h5>
<p>If you need an assignment operator, you also need a destructor and copy constructor. If you need an assignment operator, it&#39;s because you need something like a deep copy, or some other management of resources. Thus it is almost certain that you will need a destructor and a copy constructor.
If you don&#39;t need an assignment operator (because the default-generated assignment operator would be correct), you should let the compiler generate it: tt will not contain bugs, and you will often not have to update it when the class is modified.</p>
<h5>Description</h5>
<p>This rule searches for classes which implement an assignment operator (operator=) but which let the compiler generate a default version for the destructor or the copy constructor.</p>
<h5>Remediation</h5>
<p>Prevent default generation of the destructor and copy constructor: - Provide your own version - Or declare it private without implementing it to prevent the operation (for copy constructor)</p>
<h5>Reference</h5>
<p>&quot;C++ Notes: OOP: Copy Constructors&quot;:http://www.fredosaurus.com/notes-cpp/oop-condestructors/copyconstructors.html</p>
<h5>Output</h5>
<p>Associated to each C++ class with violations, the Quality Rule provides: - The number of violation patterns - Bookmarks for violation patterns found in source code: - operator=</p>
<h5>Total</h5>
<p>Number of C++ classes</p>
<h5>Metric ID</h5>
<p>8026</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
