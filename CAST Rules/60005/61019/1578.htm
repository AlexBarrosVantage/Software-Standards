<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid using LONG &amp; LONG RAW datatype for Table Columns</title>
<link rel="StyleSheet" href="../../style.css" type="text/css">
</head>
<body>
<h4>Avoid using LONG &amp; LONG RAW datatype for Table Columns</h4>
<hr>
<h5>Technology</h5>
<p>PL/SQL</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>8</p>
<h5>Rationale</h5>
<p>Oracle instructs user to not use LONG and LONG RAW anymore and to use LOB instead. The reasons for that are: - LONG can only store 2GB whereas LOB can have 4GB - In PL/SQL only 32760 bytes can be handled on LONG (on possibly 2GB) - Only one column of type LONG or LONG RAW per table is possible.
There is no such limit with LOB - Acess to LONG are sequential whereas access to LOB can be direct (thus having better performances) - A LONG value can&#39;t be used as a parameter of a function in SQL, and in PL/SQL LONG variables will be converted to VARCHAR2 etc..</p>
<h5>Description</h5>
<p>Long and long raw datatypes should not be used for table columns.</p>
<h5>Remediation</h5>
<p>Convert LONG and LONG RAW to LOB.</p>
<h5>Output</h5>
<p>This report lists all Tables using the long and long raw column datatypes It provides the following information: Table name, Table full name.</p>
<h5>Metric ID</h5>
<p>1578</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
