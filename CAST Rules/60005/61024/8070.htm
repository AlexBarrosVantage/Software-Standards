<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Do not alter a control variable in the body of a &#39;for&#39; statement</title>
<link rel="StyleSheet" href="../../style.css" type="text/css">
</head>
<body>
<h4>Do not alter a control variable in the body of a &#39;for&#39; statement</h4>
<hr>
<h5>Technology</h5>
<p>C Language, C++</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>5</p>
<h5>Rationale</h5>
<p>Updating the loop iterator in the &#39;for&#39; body makes the logic difficult to understand, can decrease the maintainability, and then be error-prone practice.</p>
<h5>Description</h5>
<p>This rule searches for C functions, C++ methods, constructors, and destructors that contain &#39;for&#39; bodies in which a control variable is altered.</p>
<h5>Remediation</h5>
<p>Review the logic of the loop management to avoid altering the iterator in the &#39;for&#39; header and body.</p>
<h5>Reference</h5>
<p>High Integrity C++ Coding Standard Manual</p>
<h5>Output</h5>
<p>Associated to each C function, C++ method, constructor and destructor with violations, the Quality Rule provides: - loop control variable - Bookmarks for violation patterns found in source code: - control variable alteration</p>
<h5>Total</h5>
<p>Number of C functions, C++ methods, constructors, and destructors</p>
<h5>Metric ID</h5>
<p>8070</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
