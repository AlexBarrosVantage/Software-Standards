<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid using getopt() function</title>
<link rel="StyleSheet" href="../../../style.css" type="text/css">
</head>
<body>
<h4>Avoid using getopt() function</h4>
<hr>
<h5>Technology</h5>
<p>C Language, C++</p>
<h5>Unified Status</h5>
<p>Unified</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>6</p>
<h5>Rationale</h5>
<p>Some implementations of the &#39;getopt()&#39; function are vulnerable to internal buffer overflows. The bounds must be checked for each calls of the function.</p>
<h5>Description</h5>
<p>This rule searches for C/C++ functions, methods, constructors, and destructors that call the &#39;getopt()&#39; function.</p>
<h5>Remediation</h5>
<p>Consult the technical documentation related to this function. You should also check the length of buffers used as input before calling the function.</p>
<h5>Reference</h5>
<p>Build Security In (https://buildsecurityin.us-cert.gov/bsi/articles/knowledge/coding)</p>
<h5>Sample</h5>
<pre>
int main(int argc, char *argv[])
{
  int rc = 0;
  while ( (rc = getopt (argc, argv, &quot;cmd:&quot;)) != -1 ) 
  {
    /* Manage options */
  }
}
</pre>
<h5>Remediation sample</h5>
<pre>
int main(int argc, char *argv[])
{
  int rc = 0;
  int i = 0;
  
  if (argc &gt; MAX_SAFE_ARGC) 
  {
    exit(1);
  }
  
  for (i = 0; argc &gt; i; i++)
  {
    if (strlen(argv[i]) &gt; MAX_SAFE_ARGLEN)
    {
      exit(1);
    }
  }

  while ( (rc = getopt (argc, argv, &quot;cmd:&quot;)) != -1 ) 
  {
    /* Manage options */
  }
  
  return 1;
}
</pre>
<h5>Output</h5>
<p>Associated to each C/C++ function/method/constructor/destructor with violations, the Quality Rule provides: - Number of violation patterns - Bookmarks for violation patterns found in the source code: - &#39;getopt()&#39; function call</p>
<h5>Total</h5>
<p>Number of C/C++ functions, constructors, destructors, and methods</p>
<h5>Metric ID</h5>
<p>7994</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
