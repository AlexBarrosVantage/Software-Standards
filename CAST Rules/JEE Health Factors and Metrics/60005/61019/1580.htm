<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid using execute immediate</title>
<link rel="StyleSheet" href="../../style.css" type="text/css">
</head>
<body>
<h4>Avoid using execute immediate</h4>
<hr>
<h5>Technology</h5>
<p>Forms, PL/SQL</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>Yes</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>9</p>
<h5>Rationale</h5>
<p>The EXECUTE IMMEDIATE statement prepares (parses) and immediately executes a dynamic SQL statement or an anonymous PL/SQL block. Each repetition of the same dynamic SQL statement incurs a soft parse, which is a small overhead compared to a static statement, but still an overhead. The overhead of
execute immediate is small, it can be in the thousandths of a second - however, it can add up if this is inside a loop / on a method called once per object.</p>
<h5>Description</h5>
<p>Using Execute immediate allows to dynamically create the query from strings, but leads to some performance problems. The execution plan cannot be stored in memory and thus needs to be calculated each time.</p>
<h5>Remediation</h5>
<p>You should replace the dynamic SQL statements through different static statements.</p>
<h5>Output</h5>
<p>This report lists all triggers, procedures, functions and packages using the execute immediate keyword. It provides the following information: Artifact Name, Artifact Full Name.</p>
<h5>Total</h5>
<p>The total procedure counts all the PLSQL objects using execute immediate</p>
<h5>Metric ID</h5>
<p>1580</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
