<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid String concatenation in loops</title>
<link rel="StyleSheet" href="../../../style.css" type="text/css">
</head>
<body>
<h4>Avoid String concatenation in loops</h4>
<hr>
<h5>Technology</h5>
<p>.Net, C#</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>Yes</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>8</p>
<h5>Rationale</h5>
<p>When placed in a loop, String concatenation results in the creation and garbage collection of large numbers of temporary objects. This both consumes memory and can dramatically slow the program execution. It is recommended to create a StringBuilder before entering the loop, and append to it
within the loop, thus reducing the overhead.</p>
<h5>Description</h5>
<p>All String objects that use concatenation in loops (for, while, do while) will be reported.</p>
<h5>Remediation</h5>
<p>It is recommended to create a StringBuilder before entering the loop, and append to it within the loop, thus reducing the overhead.</p>
<h5>Sample</h5>
<pre>
static void LoopKO()
      {
         String myText = &quot;hello&quot; ;
         for(int i = 0; i &lt; 1000; i++)
         {
            myText += &quot;count =&quot;;        // VIOLATION
            myText += i.ToString();     // VIOLATION
         }
         Console.WriteLine(myText.ToString());
      }
</pre>
<h5>Remediation sample</h5>
<pre>
static void LoopOK()
      {
         StringBuilder myText = new StringBuilder();
         for(int i = 0; i &lt; 1000; i++)
         {
            myText.Append(&quot;count =&quot;);       // FIXED
            myText.Append(i.ToString());      // FIXED
         }
         Console.WriteLine(myText.ToString());
      }
</pre>
<h5>Output</h5>
<p>This report lists all artifacts with code that call String concatenation in loops. It provides the following information: Method full name String concatenation is either a call to String.Concat or by the += operator.</p>
<h5>Total</h5>
<p>Total number of artifacts with code</p>
<h5>Metric ID</h5>
<p>7198</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
