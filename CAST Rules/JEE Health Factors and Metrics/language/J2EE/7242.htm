<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid implementing Action Classes inheriting directly from Struts Action</title>
<link rel="StyleSheet" href="../../style.css" type="text/css">
</head>
<body>
<h4>Avoid implementing Action Classes inheriting directly from Struts Action</h4>
<hr>
<h5>Technology</h5>
<p>JEE</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>2</p>
<h5>Rationale</h5>
<p>It is a good practice to extend the struts Action class, and all specific Actions should inherit from it. With such inheritance tree, the basic action class (those inheriting from Struts Action class) implements the methods shared by all the Action class to avoid code redundancy.</p>
<h5>Description</h5>
<p>All Action Classes should inherit from a single Class, inheriting from the Struts Action Class (org.apache.struts.action.Action). When a class inherit from an action class, all other action class must inherit from the same one. This base class must be abstract or have an abstract method.</p>
<h5>Remediation</h5>
<p>Have Action Class inherit from one single extension of Struts Action Class that is abstract or have an abstract method.</p>
<h5>Reference</h5>
<p>http://www.jaxmag.com/itr/online_artikel/psecom,id,648,nodeid,147.html http://www.sitepoint.com/article/struts-first-steps/2</p>
<h5>Sample</h5>
<pre>
Public  class MyAction extends Action { // VIOLATION
   public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest  request, HttpServletResponse response) throws Exception {
      // Some code
   }
}
</pre>
<h5>Remediation sample</h5>
<pre>
Public  class MyBaseAction extends Action {
   public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest  request, HttpServletResponse response) throws Exception {
      //Call all common methods
      commonTasks();
      return executeSpecificTask(mapping,form,
                                                   request,response);
      }

     private void commonTasks() {
     //Code for common tasks
    }

   //Provide implementation of this method in sub-classes
   public abstract ActionForward executeSpecificTask (ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception;
}

Public  class MyAction extends MyBaseAction { // FIXED
    public ActionForward executeSpecificTask (ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
      // some code
   }
}
</pre>
<h5>Output</h5>
<p>This report lists all Action Classes inheriting from different Class. It provides the following information: - Class full name - parent Class full name</p>
<h5>Total</h5>
<p>The number of action classes (inherit from org.apache.struts.action.Action)</p>
<h5>Metric ID</h5>
<p>7242</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
