<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en">
<title>Avoid method invocation in a loop termination expression</title>
<link rel="StyleSheet" href="../../../style.css" type="text/css">
</head>
<body>
<h4>Avoid method invocation in a loop termination expression</h4>
<hr>
<h5>Technology</h5>
<p>All Languages/Technologies</p>
<h5>Unified Status</h5>
<p>N/A</p>
<h5>XXL Status</h5>
<p>N/A</p>
<h5>Critical Quality Rule</h5>
<p>No</p>
<h5>Weight in Parent Tech. Criterion</h5>
<p>8</p>
<h5>Rationale</h5>
<p>Don&#39;t Terminate Loops with Method Calls: The overhead is significant. Not only the call of method comes with a important cost but depending on the complexity and the performance of the called method the impact on performance can be huge. In deed, the method can be called several hundred to
several thousand times.</p>
<h5>Description</h5>
<p>Finds all loops (for, while, do while) termination that call a method except the following methods coming from Iterator, ListIterator, Enumeration, StringTokenizer, ResultSet classes: for Java language: * java.util.Enumeration.hasMoreElements() * java.util.Enumeration.nextElement() *
java.util.Iterator.hasNext() * java.util.Iterator.next() * java.util.ListIterator.hasNext() * java.util.ListIterator.hasPrevious() * java.util.ListIterator.next() * java.util.ListIterator.nextIndex() * java.util.ListIterator.previous() * java.util.ListIterator.previousIndex() *
java.sql.ResultSet.isAfterLast() * java.sql.ResultSet.isBeforeFirst() * java.sql.ResultSet.isLast() * java.sql.ResultSet.isFirst() * java.sql.ResultSet.last() * java.sql.ResultSet.next() * java.sql.ResultSet.previous() * java.util.StringTokenizer.hasMoreElements() *
java.util.StringTokenizer.hasMoreTokens() * java.util.StringTokenizer.nextElement() * java.util.StringTokenizer.nextToken() (Note that the filter applies only on the short name of the method: i.e. for example all method next() will not be reported as a violation even if it does not belongs to
java.util.Iterator, java.util.ListIterator or java.sql.ResultSet) for C# language: * ReadLine * Read</p>
<h5>Remediation</h5>
<p>Use a local variable to store the condition.</p>
<h5>Reference</h5>
<p>Java Reference: http://www.precisejava.com/javaperf/j2se/Loops.htm Java Performance Tuning By Jack Shirazi - Publisher : O&#39;Reilly ISBN 0-596-00377-3 or http://www.devx.com/tips/Tip/5625 C# Reference: http://aspalliance.com/818</p>
<h5>Sample</h5>
<pre>
for (int i=0; i &lt; tab.length();  i++) { // VIOLATION
  tab[i] = i;
}
</pre>
<h5>Remediation sample</h5>
<pre>
int length = tab.length();
for (int i=0; i &lt; length; i++) { // FIXED
  tab[i] = i;
}
</pre>
<h5>Output</h5>
<p>This report lists all methods that call a method in a loop termination (except methods referenced in the description) It provides the following information: Method full name</p>
<h5>Total</h5>
<p>All methods having at least one loop</p>
<h5>Metric ID</h5>
<p>7204</p>
<hr>
<p align="right"><a href="http://www.castsoftware.com" target="_blank"><img border="0" src="../../../cast.gif" alt="CAST Website" width="174" height="21"></a></p>
</body>
</html>
